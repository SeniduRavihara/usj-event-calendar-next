generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  STUDENT
}

model User {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(100)
  email           String    @unique @db.VarChar(100)
  password        String    @db.VarChar(255) // Store hashed password
  role            UserRole  @default(STUDENT)
  
  // Only for students
  department      String?   @db.VarChar(100)
  student_id      String?   @unique @db.VarChar(20)
  
  created_at      DateTime  @default(now()) @db.Timestamp()
  updated_at      DateTime  @default(now()) @updatedAt @db.Timestamp()
  
  // Relations - events created by this user (admins create events)
  created_events  Event[]

  @@map("users")
}

model Event {
  id                   Int       @id @default(autoincrement())
  created_by           Int       // Admin who created this event
  title                String    @db.VarChar(255)
  cover_image          String?   @db.VarChar(500)
  cover_color          String?   @db.VarChar(50)
  event_date           DateTime? @db.Date
  event_time           DateTime? @db.Time
  location             String?   @db.VarChar(255)
  departments          Json?     // JSON array - which departments can see this event
  description          String?   @db.Text
  registration_needed  Boolean   @default(false)
  registration_link    String?   @db.VarChar(500)
  created_at           DateTime  @default(now()) @db.Timestamp()
  updated_at           DateTime  @default(now()) @updatedAt @db.Timestamp()
  
  // Relations
  creator              User      @relation(fields: [created_by], references: [id], onDelete: Cascade)

  @@map("events")
}